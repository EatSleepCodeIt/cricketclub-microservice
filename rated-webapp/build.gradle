apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
version = '1.0'

buildscript {
	repositories {
		mavenCentral()
		maven { url "http://repo.spring.io/libs-release" }
		maven { url 'https://repo.spring.io/plugins-snapshot' }
	}
	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE'
		classpath 'io.spring.gradle:dependency-management-plugin:0.3.1.BUILD-SNAPSHOT'
		classpath "mysql:mysql-connector-java:5.1.34"
		classpath 'org.flywaydb:flyway-gradle-plugin:3.1'
		classpath "net.saliman:gradle-cobertura-plugin:2.2.5"
		classpath "org.ajoberstar:gradle-git:0.8.0"
	}
}

repositories {
	mavenLocal()
	jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url 'https://repo.spring.io/libs-milestone' }
	maven { url "https://repo.spring.io/libs-release" }
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-starter:1.0.2.RELEASE'
	}
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.12'
	compile 'ch.qos.logback.contrib:logback-json-classic:0.1.2'
	compile 'ch.qos.logback.contrib:logback-jackson:0.1.2'
	
	compile 'org.springframework.cloud:spring-cloud-starter-eureka'
	compile 'org.springframework.boot:spring-boot-starter-thymeleaf:1.2.3.RELEASE'	
	compile "org.springframework.cloud:spring-cloud-starter-security"
	compile "org.springframework.security.oauth:spring-security-oauth2:2.0.6.RELEASE"
	
	testCompile "org.springframework.boot:spring-boot-starter-test"
}

task setupDockerFolder(type: Copy) {
	from('build/libs/')
	into('docker/')
	include('*.jar')
	rename { String fileName ->
		fileName.replace("-${version}", "")
	}
}


import org.ajoberstar.grgit.*
import org.apache.tools.ant.filters.*

import com.sun.org.apache.xalan.internal.xsltc.compiler.Copy.*

configure(rootProject) {
	task gitMetadata << {
		
		ext {
			repo = Grgit.open(project.file('.'))
			branch = repo.branch?.current?.name
			commitId = repo.head().abbreviatedId
			commitTime = new Date(new Integer(repo.head().time)
					.longValue()*1000L).format("yyyy-MM-dd HH:mm")
		}
	}

	apply from: 'writeGitPropertiesFile.gradle'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
